[gd_scene load_steps=10 format=2]

[ext_resource path="res://character/controller.gd" type="Script" id=1]
[ext_resource path="res://character/character.gd" type="Script" id=2]
[ext_resource path="res://character/traits.gd" type="Script" id=5]
[ext_resource path="res://character/energy_bar.gd" type="Script" id=6]

[sub_resource type="CapsuleMesh" id=3]

[sub_resource type="CapsuleShape" id=4]

[sub_resource type="PlaneMesh" id=5]

[sub_resource type="Shader" id=6]
code = "shader_type spatial;
render_mode world_vertex_coords, unshaded;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;

uniform float cube_half_size = 1.0;


// Credit: https://stackoverflow.com/questions/32227283/getting-world-position-from-depth-buffer-value
vec3 world_pos_from_depth(float depth, vec2 screen_uv, mat4 inverse_proj, mat4 inverse_view) {
	float z = depth * 2.0 - 1.0;
	
	vec4 clipSpacePosition = vec4(screen_uv * 2.0 - 1.0, z, 1.0);
	vec4 viewSpacePosition = inverse_proj * clipSpacePosition;
	
	viewSpacePosition /= viewSpacePosition.w;
	
	vec4 worldSpacePosition = inverse_view * viewSpacePosition;
	
	return worldSpacePosition.xyz;
}

void fragment() {
	float depth = texture(DEPTH_TEXTURE, SCREEN_UV).x;
	vec3 world_pos = world_pos_from_depth(depth, SCREEN_UV, INV_PROJECTION_MATRIX, (CAMERA_MATRIX));
	vec4 test_pos = (inverse(WORLD_MATRIX) * vec4(world_pos, 1.0));
	
	if (abs(test_pos.x) > cube_half_size ||abs(test_pos.y) > cube_half_size || abs(test_pos.z) > cube_half_size) {
		discard;
	}
	ALBEDO = texture(texture_albedo, (test_pos.xz * 0.5) + 0.5).rgb * albedo.rgb;
}
"

[sub_resource type="ShaderMaterial" id=7]
shader = SubResource( 6 )
shader_param/albedo = null
shader_param/cube_half_size = 1.0

[node name="character" type="KinematicBody"]
script = ExtResource( 2 )

[node name="controller" type="Node" parent="."]
script = ExtResource( 1 )

[node name="traits" type="Node" parent="."]
script = ExtResource( 5 )

[node name="inventory" type="Node" parent="."]

[node name="character_model" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 1.5, 0 )
mesh = SubResource( 3 )

[node name="NavigationAgent" type="NavigationAgent" parent="."]

[node name="energy_bar" type="ColorRect" parent="."]
margin_right = 40.0
margin_bottom = 40.0
script = ExtResource( 6 )

[node name="CollisionShape" type="CollisionShape" parent="."]
transform = Transform( 1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 1.5, 0 )
shape = SubResource( 4 )

[node name="select_circle" type="MeshInstance" parent="."]
transform = Transform( 5, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 0 )
mesh = SubResource( 5 )
material/0 = SubResource( 7 )
